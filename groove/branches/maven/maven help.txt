GROOVE Maven build
==================

1. Getting the complete set of (jar) libraries

Globally available libraries
----------------------------
Many libraries can be found automatically by Maven. For those the pom.xml need only specify

<dependency>
	<groupId>x</groupId>
	<artifactId>y</artifactId>
	<version>n</version>
</dependency>

which will ensure that package y-n.jar will be obtained from group x (which needs to be recognised by Maven)

Local libraries
---------------
If a library cannot be found automatically by Maven, but for other purposes you want Maven to treat it in the same way as the globally available libs, you first need to add it to your local Maven repository. That is a step that needs to be taken once in your build environment, for every such library.

Adding a library to your local Maven repository is called *installing* the library, in Maven terminology. This can be done by the Maven instruction

mvn install:install-file
  -Dfile=path-to-jar/y.jar
  [-Dsources=path-to-sources/y-src.zip
  -DgroupId=x 
  -DarctifactId=y 
  -Dversion=n

where path-to-jar/y.jar is the path to the actual jar file, from the working directory (and the optional path-to-sources/y-src.zip the path to a sip file containing sources, if they are available).

For the GROOVE local libraries, help has been provided by

* Collecting the groupId, artifactId and version (and dependencies) in a single y.pom file, stored in the subdirectory lib/pom of GROOVE
* Creating a m2 launch configuration that invokes the above install-file goal
* Adding that m2 launch configuration to the launch group "GROOVE install local mvn-deps"

2. Zipping it up

The zip should consist of:

bin - containing Target.jar for all runnable targets, which are empty except for a manifest specifying the main class and class path
lib - containing the groove jar as well as all its libraries
   
 
