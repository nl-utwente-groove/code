<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<TokenMakerDefinition>
<general>
<package>groove.prolog.util</package>
<className>PrologTokenMaker</className>
<extendedClass>AbstractJFlexTokenMaker</extendedClass>
<classComment>Token maker for syntax highlighting in Prolog.
Generated using TokenMakerMaker
</classComment>
<ignoreCase>false</ignoreCase>
</general>
<comments>
<lineComments enabled="true" start="%"/>
<multiLineComments enabled="true" end="*/" start="/*"/>
<docComments enabled="false" end="" start=""/>
</comments>
<keywords>
<keyword>is</keyword>
</keywords>
<dataTypes/>
<functions>
<function>abolish</function>
<function>append</function>
<function>arg</function>
<function>asserta</function>
<function>assertz</function>
<function>at_end_of_stream</function>
<function>atom</function>
<function>atom_chars</function>
<function>atom_codes</function>
<function>atom_concat</function>
<function>atom_length</function>
<function>atomic</function>
<function>bagof</function>
<function>call</function>
<function>char_code</function>
<function>char_conversion</function>
<function>clause</function>
<function>close</function>
<function>compare</function>
<function>compound</function>
<function>copy_term</function>
<function>current_char_conversion</function>
<function>current_functor</function>
<function>current_input</function>
<function>current_op</function>
<function>current_output</function>
<function>current_predicate</function>
<function>current_prolog_flag</function>
<function>date_time_stamp</function>
<function>date_time_value</function>
<function>debugging</function>
<function>dialog_confirm</function>
<function>dialog_file_open</function>
<function>dialog_file_save</function>
<function>dialog_message</function>
<function>dialog_prompt</function>
<function>ensure_loaded</function>
<function>findall</function>
<function>float</function>
<function>flush_output</function>
<function>format_time</function>
<function>functor</function>
<function>get_byte</function>
<function>get_char</function>
<function>get_code</function>
<function>get_time</function>
<function>halt</function>
<function>integer</function>
<function>is_list</function>
<function>java_classname</function>
<function>java_object</function>
<function>java_to_string</function>
<function>length</function>
<function>listing</function>
<function>member</function>
<function>msort</function>
<function>nl</function>
<function>nonvar</function>
<function>nospy</function>
<function>nospyall</function>
<function>notrace</function>
<function>number</function>
<function>number_chars</function>
<function>number_codes</function>
<function>once</function>
<function>op</function>
<function>open</function>
<function>parse_time</function>
<function>peek_byte</function>
<function>peek_char</function>
<function>peek_code</function>
<function>predsort</function>
<function>put_byte</function>
<function>put_char</function>
<function>put_code</function>
<function>read</function>
<function>read_term</function>
<function>repeat</function>
<function>retract</function>
<function>set_input</function>
<function>set_output</function>
<function>set_prolog_flag</function>
<function>set_stream_position</function>
<function>setof</function>
<function>sort</function>
<function>spy</function>
<function>stacktrace</function>
<function>stamp_date_time</function>
<function>stream_property</function>
<function>sub_atom</function>
<function>trace</function>
<function>tracing</function>
<function>unify_with_occurs_check</function>
<function>uuid</function>
<function>uuid_compare</function>
<function>uuid_variant</function>
<function>uuid_version</function>
<function>var</function>
<function>write</function>
<function>write_canonical</function>
<function>write_term</function>
<function>writeq</function>

<function>active_ruleevent</function>
<function>active_state</function>
<function>closed_state</function>
<function>composite_type_graph</function>
<function>confluent_rule</function>
<function>confluent_rule_name</function>
<function>convert_valuenode</function>
<function>direct_subtype</function>
<function>direct_subtype_label</function>
<function>edge_label</function>
<function>edge_role_binary</function>
<function>edge_role_flag</function>
<function>edge_role_node_type</function>
<function>edge_source</function>
<function>edge_target</function>
<function>final_state</function>
<function>final_state_set</function>
<function>graph_binary</function>
<function>graph_edge</function>
<function>graph_edge_count</function>
<function>graph_edge_set</function>
<function>graph_flag</function>
<function>graph_node</function>
<function>graph_node_count</function>
<function>graph_node_set</function>
<function>graph_node_type</function>
<function>gts</function>
<function>has_node_type</function>
<function>is_edge</function>
<function>is_graph</function>
<function>is_gts</function>
<function>is_node</function>
<function>is_rule</function>
<function>is_ruleevent</function>
<function>is_rulematch</function>
<function>is_state</function>
<function>is_transition</function>
<function>is_valuenode</function>
<function>label</function>
<function>label_edge</function>
<function>label_edge_set</function>
<function>node_edge</function>
<function>node_edge_set</function>
<function>node_number</function>
<function>node_out_edge</function>
<function>node_out_edge_set</function>
<function>node_path</function>
<function>node_self_edges</function>
<function>node_self_edges_excl</function>
<function>node_with_attribute</function>
<function>rule</function>
<function>rule_confluent</function>
<function>rule_lhs</function>
<function>rule_name</function>
<function>rule_priority</function>
<function>rule_rhs</function>
<function>ruleevent</function>
<function>ruleevent_created_edge</function>
<function>ruleevent_created_node</function>
<function>ruleevent_erased_edge</function>
<function>ruleevent_erased_node</function>
<function>ruleevent_label</function>
<function>ruleevent_match</function>
<function>ruleevent_rule</function>
<function>ruleevent_transpose</function>
<function>rulematch</function>
<function>rulematch_edge</function>
<function>rulematch_node</function>
<function>rulematch_rule</function>
<function>start_graph</function>
<function>start_graph_name</function>
<function>start_state</function>
<function>state</function>
<function>state_graph</function>
<function>state_is_closed</function>
<function>state_next</function>
<function>state_next_set</function>
<function>state_ruleevent</function>
<function>state_transition</function>
<function>state_transition_set</function>
<function>subtype</function>
<function>subtype_label</function>
<function>transition_event</function>
<function>transition_match</function>
<function>transition_source</function>
<function>transition_target</function>
<function>type_graph</function>
<function>type_graph_name</function>
<function>active_ruleevent</function>
<function>active_state</function>
<function>closed_state</function>
<function>composite_type_graph</function>
<function>confluent_rule</function>
<function>confluent_rule_name</function>
<function>convert_valuenode</function>
<function>direct_subtype</function>
<function>direct_subtype_label</function>
<function>edge_label</function>
<function>edge_role_binary</function>
<function>edge_role_flag</function>
<function>edge_role_node_type</function>
<function>edge_source</function>
<function>edge_target</function>
<function>final_state</function>
<function>final_state_set</function>
<function>graph_binary</function>
<function>graph_edge</function>
<function>graph_edge_count</function>
<function>graph_edge_set</function>
<function>graph_flag</function>
<function>graph_node</function>
<function>graph_node_count</function>
<function>graph_node_set</function>
<function>graph_node_type</function>
<function>gts</function>
<function>has_node_type</function>
<function>is_edge</function>
<function>is_graph</function>
<function>is_gts</function>
<function>is_node</function>
<function>is_rule</function>
<function>is_ruleevent</function>
<function>is_rulematch</function>
<function>is_state</function>
<function>is_transition</function>
<function>is_valuenode</function>
<function>label</function>
<function>label_edge</function>
<function>label_edge_set</function>
<function>node_edge</function>
<function>node_edge_set</function>
<function>node_number</function>
<function>node_out_edge</function>
<function>node_out_edge_set</function>
<function>node_path</function>
<function>node_self_edges</function>
<function>node_self_edges_excl</function>
<function>node_with_attribute</function>
<function>rule</function>
<function>rule_confluent</function>
<function>rule_lhs</function>
<function>rule_name</function>
<function>rule_priority</function>
<function>rule_rhs</function>
<function>ruleevent</function>
<function>ruleevent_created_edge</function>
<function>ruleevent_created_node</function>
<function>ruleevent_erased_edge</function>
<function>ruleevent_erased_node</function>
<function>ruleevent_label</function>
<function>ruleevent_match</function>
<function>ruleevent_rule</function>
<function>ruleevent_transpose</function>
<function>rulematch</function>
<function>rulematch_edge</function>
<function>rulematch_node</function>
<function>rulematch_rule</function>
<function>start_graph</function>
<function>start_graph_name</function>
<function>start_state</function>
<function>state</function>
<function>state_graph</function>
<function>state_is_closed</function>
<function>state_next</function>
<function>state_next_set</function>
<function>state_ruleevent</function>
<function>state_transition</function>
<function>state_transition_set</function>
<function>subtype</function>
<function>subtype_label</function>
<function>transition_event</function>
<function>transition_match</function>
<function>transition_source</function>
<function>transition_target</function>
<function>type_graph</function>
<function>type_graph_name</function>
</functions>
<stringLiterals enabled="true" multiLine="false"/>
<charLiterals enabled="true" multiLine="false"/>
<backtickLiterals enabled="false"/>
<operators>
<operator> ==</operator>
<operator>*</operator>
<operator>**</operator>
<operator>+</operator>
<operator>-</operator>
<operator>--&gt;</operator>
<operator>/</operator>
<operator>//</operator>
<operator>/\</operator>
<operator>:-</operator>
<operator>&lt;</operator>
<operator>&lt;&lt;</operator>
<operator>=, =..</operator>
<operator>=:=</operator>
<operator>=&lt;</operator>
<operator>==</operator>
<operator>=@=</operator>
<operator>=\=</operator>
<operator>&gt;</operator>
<operator>&gt;=</operator>
<operator>&gt;&gt;</operator>
<operator>?-</operator>
<operator>@&lt;</operator>
<operator>@=&lt;</operator>
<operator>@&gt;</operator>
<operator>@&gt;=</operator>
<operator>\</operator>
<operator>\+</operator>
<operator>\/</operator>
<operator>\==</operator>
<operator>\=@=</operator>
<operator>^</operator>
</operators>
</TokenMakerDefinition>
