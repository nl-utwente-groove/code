#NLS (National Language Support) JAXFront V2.95 (10-2014-02)
#Mon Nov 10 23:23:42 CET 2014
/cnf&co;configuration/cnf&co;Global%caption=Labels
/cnf&co;configuration/cnf&co;Glossary%caption=Glossary
/cnf&co;configuration/cnf&co;global%caption=Labels
/cnf&co;configuration/cnf&co;instanceModel%caption=Design
/cnf&co;configuration/cnf&co;typeModel%caption=Glossary
/cnf&co;configuration/cnf&co;Global/@id_mode%label=Type name qualification
/cnf&co;configuration/cnf&co;Global/@id_separator%label=Namespace separator
/cnf&co;configuration/cnf&co;Global/@nullable%label=Nullable
/cnf&co;configuration/cnf&co;Glossary/@enumMode%label=Representation of enums
/cnf&co;configuration/cnf&co;Glossary/@metaSchema%caption=Meta-schema
/cnf&co;configuration/cnf&co;Glossary/@metaSchema%caption%tooltip=Tooltip text
/cnf&co;configuration/cnf&co;Glossary/@metaSchema%label=Generate meta type graph?
/cnf&co;configuration/cnf&co;Glossary/@metaSchema%label%tooltip=Should a meta-schema be generated along with the type graph?
/cnf&co;configuration/cnf&co;global/@id_mode%label=Type name qualification
/cnf&co;configuration/cnf&co;global/@nullable%label=Nullable
/cnf&co;configuration/cnf&co;global/cnf&co;id_overrides[list]%caption=Identifier overrides
/cnf&co;configuration/cnf&co;global/cnf&co;strings%caption=Label text
/cnf&co;configuration/cnf&co;typeModel/@enumMode%label=Representation of enums
/cnf&co;configuration/cnf&co;typeModel/@metaSchema%label=Generate meta-type graph?
/cnf&co;configuration/cnf&co;Design/cnf&co;objects/@use_identifier%label=Use node identifiers
/cnf&co;configuration/cnf&co;Glossary/cnf&co;fields/@opposites%label=Generate opposites?
/cnf&co;configuration/cnf&co;Glossary/cnf&co;fields/cnf&co;containers%caption=Containers
/cnf&co;configuration/cnf&co;Glossary/cnf&co;fields/cnf&co;intermediates%caption=Use intermediate nodes for edges?
/cnf&co;configuration/cnf&co;Glossary/cnf&co;properties/@useAbstract%label=Abstract
/cnf&co;configuration/cnf&co;Glossary/cnf&co;properties/@useAbstract%label%tooltip=If checked, abstractness is set in the type graph
/cnf&co;configuration/cnf&co;global/cnf&co;id_overrides/cnf&co;id%label=Original
/cnf&co;configuration/cnf&co;global/cnf&co;id_overrides/cnf&co;name%label=Label in graph
/cnf&co;configuration/cnf&co;instanceModel/cnf&co;objects/@use_identifier%label=Generate node identifiers?
/cnf&co;configuration/cnf&co;typeModel/cnf&co;fields/@opposites%label=Generate opposites?
/cnf&co;configuration/cnf&co;typeModel/cnf&co;fields/cnf&co;containers%caption=Containers
/cnf&co;configuration/cnf&co;typeModel/cnf&co;fields/cnf&co;defaults%caption=Default values
/cnf&co;configuration/cnf&co;Glossary/cnf&co;fields/cnf&co;containers/@useTypeName%label=Use type name?
/cnf&co;configuration/cnf&co;Glossary/cnf&co;fields/cnf&co;intermediates/@when%label=Intermediate nodes for edges
/cnf&co;configuration/cnf&co;Glossary/cnf&co;fields/cnf&co;intermediates/@when%label%tooltip=always&co; always use intermediates; container&co; use intermediates for all containers; required&co; only use intermediates to resolve ambiguities
/cnf&co;configuration/cnf&co;typeModel/cnf&co;fields/cnf&co;containers/@useTypeName%label=Use type name?
/cnf&co;configuration/cnf&co;typeModel/cnf&co;fields/cnf&co;defaults/@setValue%label=Generate defaults in graphs?
/cnf&co;configuration/cnf&co;typeModel/cnf&co;fields/cnf&co;defaults/@useRule%label=Generate default value rules?
/cnf&co;configuration/cnf&co;typeModel/cnf&co;fields/cnf&co;intermediates/@when%label=Intermediate nodes for edges
/cnf&co;configuration/cnf&co;typeModel/cnf&co;fields/cnf&co;intermediates/@when%label%tooltip=always&co; always use intermediates; container&co; use intermediates for all containers; required&co; only use intermediates to resolve ambiguities
/cnf&co;configuration/cnf&co;Glossary/cnf&co;fields/cnf&co;containers/cnf&co;ordering/@mode%label=Representation of elements
/cnf&co;configuration/cnf&co;Glossary/cnf&co;fields/cnf&co;containers/cnf&co;ordering/@type%label=Representation of ordering
/cnf&co;configuration/cnf&co;Glossary/cnf&co;fields/cnf&co;containers/cnf&co;ordering/@usePrevEdge%label=Include back-edge to previous element?
/cnf&co;configuration/cnf&co;typeModel/cnf&co;fields/cnf&co;containers/cnf&co;ordering/@mode%label=Representation of elements
/cnf&co;configuration/cnf&co;typeModel/cnf&co;fields/cnf&co;containers/cnf&co;ordering/@type%label=Representation of ordering
/cnf&co;configuration/cnf&co;typeModel/cnf&co;fields/cnf&co;containers/cnf&co;ordering/@usePrevEdge%label=Include back-edge to previous element?
