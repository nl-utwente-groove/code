//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.11.16 at 12:06:26 PM CET 
//


package groove.io.conceptual.configuration.schema;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeModel complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeModel"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="fields"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element name="intermediates"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;attribute name="when" type="{ConfigSchema}intermediateWhenType" default="required" /&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                   &lt;element name="containers"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;sequence&gt;
 *                             &lt;element name="ordering"&gt;
 *                               &lt;complexType&gt;
 *                                 &lt;complexContent&gt;
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                                     &lt;attribute name="type" type="{ConfigSchema}orderType" default="edge" /&gt;
 *                                     &lt;attribute name="mode" type="{ConfigSchema}modeType" default="preferValue" /&gt;
 *                                     &lt;attribute name="usePrevEdge" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *                                   &lt;/restriction&gt;
 *                                 &lt;/complexContent&gt;
 *                               &lt;/complexType&gt;
 *                             &lt;/element&gt;
 *                           &lt;/sequence&gt;
 *                           &lt;attribute name="useTypeName" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                 &lt;/sequence&gt;
 *                 &lt;attribute name="opposites" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="enumMode" type="{ConfigSchema}enumModeType" default="flag" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeModel", propOrder = {
    "fields"
})
public class TypeModel {

    @XmlElement(required = true)
    protected TypeModel.Fields fields;
    @XmlAttribute(name = "enumMode")
    protected EnumModeType enumMode;

    /**
     * Gets the value of the fields property.
     * 
     * @return
     *     possible object is
     *     {@link TypeModel.Fields }
     *     
     */
    public TypeModel.Fields getFields() {
        return fields;
    }

    /**
     * Sets the value of the fields property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypeModel.Fields }
     *     
     */
    public void setFields(TypeModel.Fields value) {
        this.fields = value;
    }

    /**
     * Gets the value of the enumMode property.
     * 
     * @return
     *     possible object is
     *     {@link EnumModeType }
     *     
     */
    public EnumModeType getEnumMode() {
        if (enumMode == null) {
            return EnumModeType.FLAG;
        } else {
            return enumMode;
        }
    }

    /**
     * Sets the value of the enumMode property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumModeType }
     *     
     */
    public void setEnumMode(EnumModeType value) {
        this.enumMode = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element name="intermediates"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;attribute name="when" type="{ConfigSchema}intermediateWhenType" default="required" /&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="containers"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element name="ordering"&gt;
     *                     &lt;complexType&gt;
     *                       &lt;complexContent&gt;
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                           &lt;attribute name="type" type="{ConfigSchema}orderType" default="edge" /&gt;
     *                           &lt;attribute name="mode" type="{ConfigSchema}modeType" default="preferValue" /&gt;
     *                           &lt;attribute name="usePrevEdge" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
     *                         &lt;/restriction&gt;
     *                       &lt;/complexContent&gt;
     *                     &lt;/complexType&gt;
     *                   &lt;/element&gt;
     *                 &lt;/sequence&gt;
     *                 &lt;attribute name="useTypeName" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *       &lt;/sequence&gt;
     *       &lt;attribute name="opposites" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "intermediates",
        "containers"
    })
    public static class Fields {

        @XmlElement(required = true)
        protected TypeModel.Fields.Intermediates intermediates;
        @XmlElement(required = true)
        protected TypeModel.Fields.Containers containers;
        @XmlAttribute(name = "opposites")
        protected Boolean opposites;

        /**
         * Gets the value of the intermediates property.
         * 
         * @return
         *     possible object is
         *     {@link TypeModel.Fields.Intermediates }
         *     
         */
        public TypeModel.Fields.Intermediates getIntermediates() {
            return intermediates;
        }

        /**
         * Sets the value of the intermediates property.
         * 
         * @param value
         *     allowed object is
         *     {@link TypeModel.Fields.Intermediates }
         *     
         */
        public void setIntermediates(TypeModel.Fields.Intermediates value) {
            this.intermediates = value;
        }

        /**
         * Gets the value of the containers property.
         * 
         * @return
         *     possible object is
         *     {@link TypeModel.Fields.Containers }
         *     
         */
        public TypeModel.Fields.Containers getContainers() {
            return containers;
        }

        /**
         * Sets the value of the containers property.
         * 
         * @param value
         *     allowed object is
         *     {@link TypeModel.Fields.Containers }
         *     
         */
        public void setContainers(TypeModel.Fields.Containers value) {
            this.containers = value;
        }

        /**
         * Gets the value of the opposites property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isOpposites() {
            if (opposites == null) {
                return false;
            } else {
                return opposites;
            }
        }

        /**
         * Sets the value of the opposites property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setOpposites(Boolean value) {
            this.opposites = value;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;sequence&gt;
         *         &lt;element name="ordering"&gt;
         *           &lt;complexType&gt;
         *             &lt;complexContent&gt;
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *                 &lt;attribute name="type" type="{ConfigSchema}orderType" default="edge" /&gt;
         *                 &lt;attribute name="mode" type="{ConfigSchema}modeType" default="preferValue" /&gt;
         *                 &lt;attribute name="usePrevEdge" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
         *               &lt;/restriction&gt;
         *             &lt;/complexContent&gt;
         *           &lt;/complexType&gt;
         *         &lt;/element&gt;
         *       &lt;/sequence&gt;
         *       &lt;attribute name="useTypeName" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "ordering"
        })
        public static class Containers {

            @XmlElement(required = true)
            protected TypeModel.Fields.Containers.Ordering ordering;
            @XmlAttribute(name = "useTypeName")
            protected Boolean useTypeName;

            /**
             * Gets the value of the ordering property.
             * 
             * @return
             *     possible object is
             *     {@link TypeModel.Fields.Containers.Ordering }
             *     
             */
            public TypeModel.Fields.Containers.Ordering getOrdering() {
                return ordering;
            }

            /**
             * Sets the value of the ordering property.
             * 
             * @param value
             *     allowed object is
             *     {@link TypeModel.Fields.Containers.Ordering }
             *     
             */
            public void setOrdering(TypeModel.Fields.Containers.Ordering value) {
                this.ordering = value;
            }

            /**
             * Gets the value of the useTypeName property.
             * 
             * @return
             *     possible object is
             *     {@link Boolean }
             *     
             */
            public boolean isUseTypeName() {
                if (useTypeName == null) {
                    return false;
                } else {
                    return useTypeName;
                }
            }

            /**
             * Sets the value of the useTypeName property.
             * 
             * @param value
             *     allowed object is
             *     {@link Boolean }
             *     
             */
            public void setUseTypeName(Boolean value) {
                this.useTypeName = value;
            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType&gt;
             *   &lt;complexContent&gt;
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
             *       &lt;attribute name="type" type="{ConfigSchema}orderType" default="edge" /&gt;
             *       &lt;attribute name="mode" type="{ConfigSchema}modeType" default="preferValue" /&gt;
             *       &lt;attribute name="usePrevEdge" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
             *     &lt;/restriction&gt;
             *   &lt;/complexContent&gt;
             * &lt;/complexType&gt;
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "")
            public static class Ordering {

                @XmlAttribute(name = "type")
                protected OrderType type;
                @XmlAttribute(name = "mode")
                protected ModeType mode;
                @XmlAttribute(name = "usePrevEdge")
                protected Boolean usePrevEdge;

                /**
                 * Gets the value of the type property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link OrderType }
                 *     
                 */
                public OrderType getType() {
                    if (type == null) {
                        return OrderType.EDGE;
                    } else {
                        return type;
                    }
                }

                /**
                 * Sets the value of the type property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link OrderType }
                 *     
                 */
                public void setType(OrderType value) {
                    this.type = value;
                }

                /**
                 * Gets the value of the mode property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link ModeType }
                 *     
                 */
                public ModeType getMode() {
                    if (mode == null) {
                        return ModeType.PREFER_VALUE;
                    } else {
                        return mode;
                    }
                }

                /**
                 * Sets the value of the mode property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link ModeType }
                 *     
                 */
                public void setMode(ModeType value) {
                    this.mode = value;
                }

                /**
                 * Gets the value of the usePrevEdge property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Boolean }
                 *     
                 */
                public boolean isUsePrevEdge() {
                    if (usePrevEdge == null) {
                        return false;
                    } else {
                        return usePrevEdge;
                    }
                }

                /**
                 * Sets the value of the usePrevEdge property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Boolean }
                 *     
                 */
                public void setUsePrevEdge(Boolean value) {
                    this.usePrevEdge = value;
                }

            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;attribute name="when" type="{ConfigSchema}intermediateWhenType" default="required" /&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class Intermediates {

            @XmlAttribute(name = "when")
            protected IntermediateWhenType when;

            /**
             * Gets the value of the when property.
             * 
             * @return
             *     possible object is
             *     {@link IntermediateWhenType }
             *     
             */
            public IntermediateWhenType getWhen() {
                if (when == null) {
                    return IntermediateWhenType.REQUIRED;
                } else {
                    return when;
                }
            }

            /**
             * Sets the value of the when property.
             * 
             * @param value
             *     allowed object is
             *     {@link IntermediateWhenType }
             *     
             */
            public void setWhen(IntermediateWhenType value) {
                this.when = value;
            }

        }

    }

}
